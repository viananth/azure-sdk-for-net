// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Deployment.Admin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties for a product secret.
    /// </summary>
    public partial class ProductSecret : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ProductSecret class.
        /// </summary>
        public ProductSecret()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProductSecret class.
        /// </summary>
        /// <param name="id">ID of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of Resource.</param>
        /// <param name="location">Location of the resource.</param>
        /// <param name="secretState">The secret state.</param>
        /// <param name="secretDescriptor">The secret type-specific
        /// descriptor.</param>
        /// <param name="expiresAfter">The expiration period of the
        /// secret.</param>
        /// <param name="description">The secret description.</param>
        /// <param name="provisioningState">Provisioning state of the
        /// resource.</param>
        /// <param name="secretKind">Specifies the secret kind. Possible values
        /// include: 'AdHoc', 'Certificate', 'Password', 'StorageAccount',
        /// 'SymmetricKey'</param>
        public ProductSecret(string id = default(string), string name = default(string), string type = default(string), string location = default(string), SecretState secretState = default(SecretState), string secretDescriptor = default(string), System.DateTime? expiresAfter = default(System.DateTime?), string description = default(string), string provisioningState = default(string), string secretKind = default(string))
            : base(id, name, type, location)
        {
            SecretState = secretState;
            SecretDescriptor = secretDescriptor;
            ExpiresAfter = expiresAfter;
            Description = description;
            ProvisioningState = provisioningState;
            SecretKind = secretKind;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the secret state.
        /// </summary>
        [JsonProperty(PropertyName = "secretState")]
        public SecretState SecretState { get; set; }

        /// <summary>
        /// Gets or sets the secret type-specific descriptor.
        /// </summary>
        [JsonProperty(PropertyName = "secretDescriptor")]
        public string SecretDescriptor { get; set; }

        /// <summary>
        /// Gets or sets the expiration period of the secret.
        /// </summary>
        [JsonProperty(PropertyName = "expiresAfter")]
        public System.DateTime? ExpiresAfter { get; set; }

        /// <summary>
        /// Gets or sets the secret description.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets provisioning state of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets specifies the secret kind. Possible values include:
        /// 'AdHoc', 'Certificate', 'Password', 'StorageAccount',
        /// 'SymmetricKey'
        /// </summary>
        [JsonProperty(PropertyName = "secretKind")]
        public string SecretKind { get; set; }

    }
}
