// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Deployment.Admin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties for a file container.
    /// </summary>
    public partial class FileContainer : Resource
    {
        /// <summary>
        /// Initializes a new instance of the FileContainer class.
        /// </summary>
        public FileContainer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FileContainer class.
        /// </summary>
        /// <param name="id">ID of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of Resource.</param>
        /// <param name="location">Location of the resource.</param>
        /// <param name="fileContainerId">File container resource identifier
        /// containing product manifest.</param>
        /// <param name="sourceUri">The remote file location. This is
        /// write-only property, DRP never returns it back to a user.</param>
        /// <param name="postCopyAction">Specifies the file post copy action.
        /// Possible values include: 'None', 'Unzip'</param>
        /// <param name="uri">The file or container Uri. This is read-only
        /// property; a user cannot set it.</param>
        /// <param name="error">The error response message.</param>
        /// <param name="provisioningState">Provisioning state of the
        /// resource.</param>
        public FileContainer(string id = default(string), string name = default(string), string type = default(string), string location = default(string), string fileContainerId = default(string), string sourceUri = default(string), string postCopyAction = default(string), string uri = default(string), ErrorInfo error = default(ErrorInfo), string provisioningState = default(string))
            : base(id, name, type, location)
        {
            FileContainerId = fileContainerId;
            SourceUri = sourceUri;
            PostCopyAction = postCopyAction;
            Uri = uri;
            Error = error;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets file container resource identifier containing product
        /// manifest.
        /// </summary>
        [JsonProperty(PropertyName = "fileContainerId")]
        public string FileContainerId { get; set; }

        /// <summary>
        /// Gets or sets the remote file location. This is write-only property,
        /// DRP never returns it back to a user.
        /// </summary>
        [JsonProperty(PropertyName = "sourceUri")]
        public string SourceUri { get; set; }

        /// <summary>
        /// Gets or sets specifies the file post copy action. Possible values
        /// include: 'None', 'Unzip'
        /// </summary>
        [JsonProperty(PropertyName = "postCopyAction")]
        public string PostCopyAction { get; set; }

        /// <summary>
        /// Gets or sets the file or container Uri. This is read-only property;
        /// a user cannot set it.
        /// </summary>
        [JsonProperty(PropertyName = "uri")]
        public string Uri { get; set; }

        /// <summary>
        /// Gets or sets the error response message.
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public ErrorInfo Error { get; set; }

        /// <summary>
        /// Gets or sets provisioning state of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

    }
}
