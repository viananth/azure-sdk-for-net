// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Deployment.Admin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties for a product package.
    /// </summary>
    public partial class ProductPackage : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ProductPackage class.
        /// </summary>
        public ProductPackage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProductPackage class.
        /// </summary>
        /// <param name="id">ID of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of Resource.</param>
        /// <param name="location">Location of the resource.</param>
        /// <param name="fileContainerId">File container resource identifier
        /// containing product manifest.</param>
        /// <param name="isDeployable">Value indicating whether the package is
        /// applicable for deployment.</param>
        /// <param name="isUpdatable">Value indicating whether the package is
        /// applicable for update.</param>
        /// <param name="productDeploymentId">The identifier of product
        /// deployment; null if this version is not installed.</param>
        /// <param name="provisioningState">Provisioning state of the
        /// resource.</param>
        public ProductPackage(string id = default(string), string name = default(string), string type = default(string), string location = default(string), string fileContainerId = default(string), bool? isDeployable = default(bool?), bool? isUpdatable = default(bool?), string productDeploymentId = default(string), string provisioningState = default(string))
            : base(id, name, type, location)
        {
            FileContainerId = fileContainerId;
            IsDeployable = isDeployable;
            IsUpdatable = isUpdatable;
            ProductDeploymentId = productDeploymentId;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets file container resource identifier containing product
        /// manifest.
        /// </summary>
        [JsonProperty(PropertyName = "fileContainerId")]
        public string FileContainerId { get; set; }

        /// <summary>
        /// Gets or sets value indicating whether the package is applicable for
        /// deployment.
        /// </summary>
        [JsonProperty(PropertyName = "isDeployable")]
        public bool? IsDeployable { get; set; }

        /// <summary>
        /// Gets or sets value indicating whether the package is applicable for
        /// update.
        /// </summary>
        [JsonProperty(PropertyName = "isUpdatable")]
        public bool? IsUpdatable { get; set; }

        /// <summary>
        /// Gets or sets the identifier of product deployment; null if this
        /// version is not installed.
        /// </summary>
        [JsonProperty(PropertyName = "productDeploymentId")]
        public string ProductDeploymentId { get; set; }

        /// <summary>
        /// Gets or sets provisioning state of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

    }
}
